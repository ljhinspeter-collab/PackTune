export enum Rarity {
  Common = 'Common',
  Uncommon = 'Uncommon',
  Rare = 'Rare',
  Mythic = 'Mythic',
}

export interface Song {
  id: string;
  title: string;
  artist: string;
  album: string;
  albumArtUrl:string;
  previewUrl: string;
  releaseDate?: string;
  rarity: Rarity;
  isShiny: boolean;
}

export interface Artist {
  id: string;
  name: string;
  pictureUrl?: string;
}

export interface CollectedSong {
  id: string; // Unique instance ID
  song: Song;
  serialNumber?: number; // Only for Mythic songs
  ownerId: string;
}

export interface User {
  id: string;
  name: string;
  bio: string;
  pfpUrl: string;
  collection: CollectedSong[];
  favoriteArtists: Artist[];
  friendIds: string[];
}

export interface TradePost {
  id: string;
  ownerId: string;
  ownerName: string;
  ownerPfpUrl: string;
  songToTrade: CollectedSong;
  seeking: string; // A text description of what the user wants
  offers: TradeOffer[];
  status: 'open' | 'closed';
  createdAt: number;
}

export interface TradeOffer {
  id: string;
  tradeId: string;
  offeredById: string;
  offeredByName: string;
  offeredByPfpUrl: string;
  songsOffered: CollectedSong[];
  status: 'pending' | 'accepted' | 'declined';
}